<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.youngtube.demo.mapper.VideoMapper">


    <select id="find8ByCategory" resultType="video">
        select videoId,
               videoName,
               videoFrontSrc,
               videoViewCount,
               videoAuditStatus,
               videoUpId,
               videoTeenagerMode,
               videoDuring
        from video
        order by videoViewCount desc limit 8

    </select>

    <select id="find6WithRecommend" resultType="video">
        select videoId, videoName, videoFrontSrc, videoViewCount, videoAuditStatus, videoUpId, videoTeenagerMode
        from video
        order by videoViewCount desc limit 6
    </select>

    <select id="find7ByCategoryAndRank" resultType="video">
        select videoId, videoName, videoAuditStatus, videoTeenagerMode
        from video
        order by videoViewCount desc limit 7
    </select>

    <select id="findOneById" resultType="video">
        select *
        from video
        where videoId = #{videoId}
    </select>

    <select id="find20WithVideoId" resultType="video">
        select videoId,
               videoName,
               videoFrontSrc,
               videoViewCount,
               videoAuditStatus,
               videoUpId,
               videoTeenagerMode,
               videoDuring
        from video limit 20
    </select>

    <select id="findVideosBySearch" resultType="video">
        select * from video where 1=1
        <if test="categoryId>0">
            and videoCategory=#{categoryId}
        </if>
        <if test="searchTex!='n.u.l.l.'">
            and (videoName like '%${searchTex}%' or videoIntroduction like '%${searchTex}%')
        </if>
        <if test="searchMode==1">
            order by videoIssuingTime desc,length(videoName) asc
        </if>
        <if test="searchMode==0">
            order by videoViewCount desc,length(videoName) asc
        </if>

    </select>

    <select id="findVideoCountByUserId" resultType="java.lang.Integer">
        select count(videoId)
        from video
        where videoUpId = #{userId}
    </select>

    <select id="findVideoByUserId" resultType="video">
        select videoId, videoName, videoFrontSrc, videoIssuingTime, videoAuditStatus
        from video
        where videoUpId = #{userId}
    </select>

    <select id="find5WithTimeHot" resultType="video">
        select videoId, videoName, videoFrontSrc, videoUpId, videoAuditStatus
        from video limit 5
    </select>

    <select id="findVideosByVideoIds" resultType="video">
        select videoId,videoName,videoFrontSrc from video where videoId in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateVideoViewCount">
        update video
        set videoViewCount = #{videoViewCount}
        where videoId = #{videoId}
    </update>

    <insert id="insertOneVideo" parameterType="video" useGeneratedKeys="true" keyProperty="videoId"  keyColumn="videoId">
        insert into video
        values (#{videoId}, #{videoName}, #{videoIntroduction}, #{videoCategory}, #{videoFrontSrc}, #{videoSrc},
                #{videoViewCount}, #{videoIssuingTime}, #{videoAuditStatus}, #{videoUpId}, #{videoTeenagerMode},
                #{videoDuring})
    </insert>

    <select id="findHistoryVideoIds" resultType="java.lang.Integer">
        select contentId
        from history
        where userId = #{userId}
          and contentType = 1
        order by viewDate desc limit 30
    </select>

    <select id="findHistoryDates" resultType="java.util.Date">
        select viewDate
        from history
        where userId = #{userId}
          and contentType = 1
        order by viewDate desc limit 30
    </select>

    <select id="findAllVideo" resultType="video">
       select videoId,videoViewCount,videoIssuingTime,videoCategory from video;

    </select>



    <select id="findLikeVideo" resultType="java.lang.Integer">
       select videoId from videoClick where userid=#{userId} and clickType=0
    </select>

    <select id="findCommentVideo" resultType="java.lang.Integer">
       select videoId from videoComment where userid=#{userId}
    </select>

    <select id="findCoinVideo" resultType="java.lang.Integer">
       select videoId from videoCoin where userid=#{userId}
    </select>

    <select id="findFavId" resultType="java.lang.Integer">
       select favoriteId from favorite where userid=#{userId}
    </select>

    <select id="findFavVideoId" resultType="java.lang.Integer">
       select videoId from videoFavorite where favoriteId=#{favoriteId}
    </select>

    <select id="findDisikeVideo" resultType="java.lang.Integer">
       select videoId from videoClick where userid=#{userId} and clickType=1
    </select>
</mapper>